<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iidooo.cms.mapper.CmsFavoriteMapper" >
  <resultMap id="BaseResultMap" type="com.iidooo.cms.model.po.CmsFavorite" >
    <id column="FavoriteID" property="favoriteID" jdbcType="INTEGER" />
    <result column="UserID" property="userID" jdbcType="INTEGER" />
    <result column="ContentID" property="contentID" jdbcType="INTEGER" />
    <result column="Remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UpdateUserID" property="updateUserID" jdbcType="INTEGER" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CreateUserID" property="createUserID" jdbcType="INTEGER" />
    <result column="IsDelete" property="isDelete" jdbcType="INTEGER" />
    <result column="Version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    F.FavoriteID, F.UserID, F.ContentID, F.Remarks, F.UpdateTime, F.UpdateUserID, F.CreateTime, F.CreateUserID, 
    F.IsDelete, F.Version
  </sql>
  
  <resultMap id="ContentWrapResultMap" type="com.iidooo.cms.model.vo.CmsContentWrap">
		<id column="ContentID" jdbcType="INTEGER" property="contentID" />
		<result column="ChannelID" jdbcType="INTEGER" property="channelID" />
		<result column="ContentType" jdbcType="VARCHAR" property="contentType" />
		<result column="ContentTitle" jdbcType="VARCHAR" property="contentTitle" />
		<result column="ContentSubTitle" jdbcType="VARCHAR" property="contentSubTitle" />
		<result column="ContentImageTitle" jdbcType="VARCHAR" property="contentImageTitle" />
		<result column="MetaTitle" jdbcType="VARCHAR" property="metaTitle" />
		<result column="MetaKeywords" jdbcType="VARCHAR" property="metaKeywords" />
		<result column="MetaDescription" jdbcType="VARCHAR" property="metaDescription" />
		<result column="ContentSummary" jdbcType="VARCHAR" property="contentSummary" />
		<result column="IsSilent" jdbcType="INTEGER" property="isSilent" />
		<result column="StickyIndex" jdbcType="INTEGER" property="stickyIndex" />
		<result column="PageViewCount" jdbcType="INTEGER" property="pageViewCount" />
		<result column="UniqueVisitorCount" jdbcType="INTEGER" property="uniqueVisitorCount" />
		<result column="StarCount" jdbcType="INTEGER" property="starCount" />
		<result column="CommentCount" jdbcType="INTEGER" property="commentCount" />
		<result column="StartShowDate" property="startShowDate" jdbcType="VARCHAR" />
		<result column="StartShowTime" property="startShowTime" jdbcType="VARCHAR" />
		<result column="EndShowDate" property="endShowDate" jdbcType="VARCHAR" />
		<result column="EndShowTime" property="endShowTime" jdbcType="VARCHAR" />
		<result column="Status" property="status" jdbcType="VARCHAR" />
		<result column="Source" property="source" jdbcType="VARCHAR" />
		<result column="SourceURL" property="sourceURL" jdbcType="VARCHAR" />
		<result column="Remarks" jdbcType="VARCHAR" property="remarks" />
		<result column="CreateTime" jdbcType="TIMESTAMP" property="createTime" />
		<result column="CreateUserID" jdbcType="INTEGER" property="createUserID" />
		<result column="UpdateTime" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="UpdateUserID" jdbcType="INTEGER" property="updateUserID" />
		<result column="IsDelete" jdbcType="INTEGER" property="isDelete" />
		<result column="Version" jdbcType="INTEGER" property="version" />
		<association select="selectCreateUser" column="createUserID" property="createUser" javaType="com.iidooo.core.model.po.SecurityUser"></association>
		<collection select="selectPictureList" column="contentID" property="pictureList" ofType="com.iidooo.cms.model.po.CmsPicture"></collection>
		<collection select="selectTagList" column="contentID" property="tagList" ofType="com.iidooo.cms.model.vo.CmsTagInfo"></collection>
	</resultMap>
	<resultMap extends="ContentWrapResultMap" id="ContentWrapResultMapWithBLOBs" type="com.iidooo.cms.model.vo.CmsContentWrap">
		<result column="ContentBody" jdbcType="LONGVARCHAR" property="contentBody" />
	</resultMap>

	<sql id="ContentWrap_Column_List">
		C.ContentID, C.ChannelID, C.ContentType, C.ContentTitle, C.ContentSubTitle, C.ContentImageTitle,
		C.MetaTitle, C.MetaKeywords,
		C.MetaDescription, C.ContentSummary, C.IsSilent, C.StickyIndex, C.PageViewCount,
		C.UniqueVisitorCount, C.StarCount, C.CommentCount, C.StartShowDate,
		C.StartShowTime,
		C.EndShowDate, C.EndShowTime, C.Status, ifnull(N.Source,'') as source,
		ifnull(N.SourceURL,'') as sourceURL, C.Remarks, C.CreateTime, C.CreateUserID, C.UpdateTime, C.UpdateUserID,
		C.IsDelete, C.Version
	</sql>
	<sql id="ContentWrap_Blob_Column_List">
		C.ContentBody
	</sql>

	<select id="selectCreateUser" parameterType="java.lang.Integer" resultType="com.iidooo.core.model.po.SecurityUser">
		select
		U.UserID, U.LoginID, '' as password, U.UserName, U.Mobile,
		U.Email, U.Sex, U.Birthday, U.WeixinID, U.PhotoURL,
		U.IsSilent, U.IsDisable, U.UserType, U.Level, U.Points, U.Experience, U.Remarks, U.UpdateTime,
		U.UpdateUserID,
		U.CreateTime, U.CreateUserID, U.IsDelete, U.Version
		from security_user U where UserID = #{createUserID,jdbcType=INTEGER}
	</select>

	<!-- 根据CmsContent表中的ContentID查询CmsTag信息 -->	
	<resultMap id="TagListResultMap" type="com.iidooo.cms.model.vo.CmsTagInfo">
		<id column="TagID" property="tagID" jdbcType="INTEGER" />
		<result column="TagName" property="tagName" jdbcType="VARCHAR" />
		<result column="Remarks" property="remarks" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectTagList" parameterType="java.lang.Integer" resultMap="TagListResultMap">
		select T.TagID, T.TagName, T.Remarks from CMS_CONTENT_TAG CT join
		CMS_TAG T on CT.TagID = T.TagID and
		CT.IsDelete = 0 and T.IsDelete = 0 and ContentID = #{contentID,jdbcType=INTEGER};
	</select>

	<!-- 根据CmsContent表中的ContentID查询CmsPicture信息 -->
	<resultMap id="PictureListResultMap" type="com.iidooo.cms.model.po.CmsPicture">
		<id column="PictureID" jdbcType="INTEGER" property="pictureID" />
		<result column="ContentID" jdbcType="INTEGER" property="contentID" />
		<result column="PictureName" jdbcType="VARCHAR" property="pictureName" />
		<result column="PictureURL" jdbcType="VARCHAR" property="pictureURL" />
		<result column="Sequence" jdbcType="INTEGER" property="sequence" />
		<result column="Remarks" jdbcType="VARCHAR" property="remarks" />
		<result column="CreateTime" jdbcType="TIMESTAMP" property="createTime" />
		<result column="CreateUserID" jdbcType="INTEGER" property="createUserID" />
		<result column="UpdateTime" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="UpdateUserID" jdbcType="INTEGER" property="updateUserID" />
		<result column="IsDelete" jdbcType="INTEGER" property="isDelete" />
		<result column="Version" jdbcType="INTEGER" property="version" />
	</resultMap>
	<sql id="Picture_Column_List">
		P.PictureID, P.ContentID, P.PictureName, P.PictureURL, P.Sequence, P.Remarks, P.CreateTime, P.CreateUserID,
		P.UpdateTime, P.UpdateUserID,
		P.IsDelete, P.Version
	</sql>
	<select id="selectPictureList" parameterType="java.lang.Integer" resultMap="PictureListResultMap">
		select
		<include refid="Picture_Column_List" />
		from CMS_PICTURE P
		where P.IsDelete = 0 and P.ContentID = #{contentID,jdbcType=INTEGER}
		order by P.Sequence asc, P.CreateTime desc
	</select>
  
  <!-- 通过用户ID，内容ID获得收藏对象 -->
  <select id="selectByUserContentID" resultType="com.iidooo.cms.model.po.CmsFavorite">
  	select 
    <include refid="Base_Column_List" />
    from cms_favorite F
    where UserID = #{userID,jdbcType=INTEGER} and ContentID = #{contentID,jdbcType=INTEGER}
    and F.IsDelete = 0
    limit 0,1
  </select>
  
  <!-- 通过用户ID，获得该用户所有的收藏内容列表 -->
  <select id="selectByUserID" resultMap="ContentWrapResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="ContentWrap_Column_List" />, <include refid="ContentWrap_Blob_Column_List" />
    from cms_favorite F
    join CMS_CONTENT C 
    on F.ContentID = C.ContentID
    left join CMS_CONTENT_NEWS N
    on F.ContentID = N.ContentID 
    where F.UserID = #{userID,jdbcType=INTEGER} and F.IsDelete = 0
    order by F.${page.sortField} ${page.sortType} limit ${page.start}, ${page.pageSize}
  </select>
  
  <!-- 根据用户ID获得所有的收藏一览 -->
  <select id="selectFavoriteList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select 
    <include refid="Base_Column_List" />
    from cms_favorite F 
    where F.UserID = #{userID,jdbcType=INTEGER} and F.IsDelete = 0
  </select>
  
  <!-- 取消收藏，进行逻辑删除 -->
  <delete id="deleteByUserContentID" parameterType="java.lang.Integer" >
    update cms_favorite
    set 
    UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
    UpdateUserID = #{updateUserID,jdbcType=INTEGER},
    IsDelete = 1, 
    Version = Version + 1
    where UserID = #{userID,jdbcType=INTEGER} and ContentID = #{contentID,jdbcType=INTEGER}
  </delete>
  
  <!-- 把内容加入用户收藏 -->
  <insert id="insert" useGeneratedKeys="true" keyProperty="favoriteID" parameterType="com.iidooo.cms.model.po.CmsFavorite" >
    insert into cms_favorite
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userID != null" >
        UserID,
      </if>
      <if test="contentID != null" >
        ContentID,
      </if>
      <if test="remarks != null" >
        Remarks,
      </if>
      <if test="updateTime != null" >
        UpdateTime,
      </if>
      <if test="updateUserID != null" >
        UpdateUserID,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="createUserID != null" >
        CreateUserID,
      </if>
        IsDelete,Version
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userID != null" >
        #{userID,jdbcType=INTEGER},
      </if>
      <if test="contentID != null" >
        #{contentID,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        #{createUserID,jdbcType=INTEGER},
      </if>
      	0,1
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iidooo.cms.model.po.CmsFavorite" >
    update cms_favorite
    <set >
      <if test="userID != null" >
        UserID = #{userID,jdbcType=INTEGER},
      </if>
      <if test="contentID != null" >
        ContentID = #{contentID,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        Remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        CreateUserID = #{createUserID,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        IsDelete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        Version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where FavoriteID = #{favoriteID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iidooo.cms.model.po.CmsFavorite" >
    update cms_favorite
    set UserID = #{userID,jdbcType=INTEGER},
      ContentID = #{contentID,jdbcType=INTEGER},
      Remarks = #{remarks,jdbcType=VARCHAR},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      CreateUserID = #{createUserID,jdbcType=INTEGER},
      IsDelete = #{isDelete,jdbcType=INTEGER},
      Version = #{version,jdbcType=INTEGER}
    where FavoriteID = #{favoriteID,jdbcType=INTEGER}
  </update>
</mapper>